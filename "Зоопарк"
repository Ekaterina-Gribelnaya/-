package com.zoo.animals;

// Абстрактный класс для всех животных
public abstract class Animal {
    protected String name;

    public Animal(String name) {
        this.name = name;
    }

    public abstract void makeSound();

    public String getName() {
        return name;
    }
}

// Абстрактный класс для млекопитающих
abstract class Mammal extends Animal {
    public Mammal(String name) {
        super(name);
    }

    public abstract void walk();
}

// Абстрактный класс для птиц
abstract class Bird extends Animal {
    public Bird(String name) {
        super(name);
    }

    public abstract void fly();
}

// Конкретный класс Льва
class Lion extends Mammal {
    public Lion(String name) {
        super(name);
    }

    @Override
    public void makeSound() {
        System.out.println(name + " roars!");
    }

    @Override
    public void walk() {
        System.out.println(name + " walks majestically.");
    }
}

// Конкретный класс Слона
class Elephant extends Mammal {
    public Elephant(String name) {
        super(name);
    }

    @Override
    public void makeSound() {
        System.out.println(name + " trumpets!");
    }

    @Override
    public void walk() {
        System.out.println(name + " walks heavily.");
    }
}

// Конкретный класс Попугая
class Parrot extends Bird {
    public Parrot(String name) {
        super(name);
    }

    @Override
    public void makeSound() {
        System.out.println(name + " squawks!");
    }

    @Override
    public void fly() {
        System.out.println(name + " flies around the enclosure.");
    }
}
package com.zoo.enclosures;

// Абстрактный класс для всех вольеров
public abstract class Enclosure {
    protected String type;

    public Enclosure(String type) {
        this.type = type;
    }

    public abstract void describe();
}

// Конкретный класс Вольера для саванны
class SavannahEnclosure extends Enclosure {
    
    public SavannahEnclosure() {
        super("Savannah");
    }

    @Override
    public void describe() {
        System.out.println("This is a " + type + " enclosure with grasslands.");
    }
}

// Конкретный класс Вольера для тропического леса
class RainforestEnclosure extends Enclosure {

    public RainforestEnclosure() {
        super("Rainforest");
    }

    @Override
    public void describe() {
        System.out.println("This is a " + type + " enclosure with dense vegetation.");
    }
}
package com.zoo.actions;

// Интерфейс для кормления животных
public interface Feedable {
   void feed();
}

// Интерфейс для игр с животными
public interface Playable {
   void play();
}
