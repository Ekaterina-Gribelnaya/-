public class MyStack<T> {
    // Внутренний класс для представления узла стека
    private static class StackNode<T> {
        private T data;
        private StackNode<T> next;

        public StackNode(T data) {
            this.data = data;
        }
    }

    private StackNode<T> top;

    // Метод для добавления элемента в стек (операция push)
    public void push(T item) {
        StackNode<T> t = new StackNode<>(item);
        t.next = top;
        top = t;
    }

    // Метод для удаления элемента из стека (операция pop)
    public T pop() {
        if (top == null) throw new EmptyStackException();
        T item = top.data;
        top = top.next;
        return item;
    }

    // Метод для просмотра верхнего элемента стека без удаления (операция peek)
    public T peek() {
        if (top == null) throw new EmptyStackException();
        return top.data;
    }

    // Метод для проверки, пуст ли стек
    public boolean isEmpty() {
        return top == null;
    }
    
    // Метод для получения текущего размера стека
    public int size() {
        int size = 0;
        StackNode<T> current = top;
        while (current != null) {
            size++;
            current = current.next;
        }
        return size;
    }
}
